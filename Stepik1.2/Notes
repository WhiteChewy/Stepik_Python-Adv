Объект в Python - это контейнер в памяти который содержит данные
Все данные в языке Python представленны в виде объектов и отношений между ними
У любого объекта в Python есть три признака:
    1. Идентификатор
        - это то что позволяет отличить один объект от другого. Грубо говоря адрес в памяти
        Оператор присванивания " = " закрепляет за идентификатором объект
        При следующем коде:
            x = 4
            y = x
         Интерпритатор связывает объект 4 с идентификатором "x".
         Далее он "вспоминает" объект идентификатора "x" и связывает с ним же
         идентификатор "y".
    2. Тип
        - это определение того что можно сделать с объектом. Примеры типов: строка,
        целое число, дробное число, список
        type().
        Неизменяемые объекты(при  выполнении присваивания создается новый объект):
            Числа(int, float, complex, bool)
            Кортеж (tuple) - неизменяемый список
            Строки (str)
            Frozen set - неизменяемое множество
        Изменяемые объекты(при изменении значения изменяется значение всех переменных ссылающихся на него):
            Списки (list)
            Словари (dict)
            Множество (set)
    3. Значение
        Для значений неизменяемых объектов работает некий прицип оптимизации если есть созданный когда то
        объект значения то при создании новой переменной с этим значением объект не будет создаваться а
        просто переменная будет ссылаться на уже созданный объект.

        Для значений изменяемых объектов такой принцип не работает и создание новой изменяемой переменной
        и присваивание ей значения повлечет за собой создание нового объекта значения.
